definitions:
  models.Comment:
    properties:
      created_at:
        type: string
      id:
        type: string
      post_id:
        type: string
      post_title:
        type: string
      post_user_name:
        type: string
      text:
        type: string
      user_id:
        type: string
      user_name:
        type: string
      user_type:
        type: string
    type: object
  models.CommentRequest:
    properties:
      post_id:
        type: string
      text:
        type: string
    type: object
  models.DeletedComment:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      post_id:
        type: string
      post_title:
        type: string
      post_user_name:
        type: string
      text:
        type: string
      user_id:
        type: string
      user_name:
        type: string
      user_type:
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.LoginResponseModel:
    properties:
      accessToken:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      password:
        type: string
      refreshToken:
        type: string
      userType:
        type: string
    type: object
  models.Policy:
    properties:
      action:
        type: string
      domain:
        type: string
      user:
        type: string
    type: object
  models.Post:
    properties:
      comments:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      likes:
        type: integer
      title:
        type: string
      update_at:
        type: string
      user_id:
        type: string
      user_name:
        type: string
    type: object
  models.PostRequest:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  models.Posts:
    properties:
      posts:
        items:
          $ref: '#/definitions/models.Post'
        type: array
    type: object
  models.RoleRequest:
    properties:
      id:
        type: string
      role:
        type: string
    type: object
  models.StandardErrorModel:
    properties:
      error:
        $ref: '#/definitions/models.Error'
    type: object
  models.UpdatePostRequest:
    properties:
      description:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  models.UpdateUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      posts:
        type: integer
      updated_at:
        type: string
      user_type:
        type: string
    type: object
  models.UserRegister:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
  models.Users:
    properties:
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: user post and comment services in REST API
  title: Microservices
  version: "1.0"
paths:
  /v1/comments:
    post:
      consumes:
      - application/json
      description: Writing new comment for Post
      parameters:
      - description: write comment
        in: body
        name: CommentInfo
        required: true
        schema:
          $ref: '#/definitions/models.CommentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Write comment
      tags:
      - Comment
  /v1/comments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Comment by Id
      parameters:
      - description: Comment Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeletedComment'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Comment
      tags:
      - Comment
    get:
      consumes:
      - application/json
      description: Getting comments by Post Id
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Comments by Post ID
      tags:
      - Comment
  /v1/login/{email}/{password}:
    get:
      consumes:
      - application/json
      description: If you have an account, you need to Login
      parameters:
      - description: email
        in: path
        name: email
        required: true
        type: string
      - description: password
        in: path
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponseModel'
      summary: Login
      tags:
      - Sign-in | Sign-up
  /v1/posts:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Post
        in: body
        name: PostInfo
        required: true
        schema:
          $ref: '#/definitions/models.PostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Post
      tags:
      - Post
  /v1/posts/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: delete post
      tags:
      - Post
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Post
      tags:
      - Post
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Post
        in: body
        name: UpdatePost
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update User /
      tags:
      - Post
  /v1/posts/profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Posts'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Profile posts
      tags:
      - Post
  /v1/posts/users/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Posts'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get posts by user Id
      tags:
      - Post
  /v1/rbac/add-policy:
    post:
      consumes:
      - application/json
      parameters:
      - description: Policy
        in: body
        name: policy
        required: true
        schema:
          $ref: '#/definitions/models.Policy'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add Policy
      tags:
      - RBAC
  /v1/rbac/add-role-user:
    post:
      consumes:
      - application/json
      parameters:
      - description: Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.RoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: add role
      tags:
      - RBAC
  /v1/rbac/change-role:
    put:
      consumes:
      - application/json
      parameters:
      - description: change Role
        in: body
        name: ChangeUserRole
        required: true
        schema:
          $ref: '#/definitions/models.RoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: change role
      tags:
      - RBAC
  /v1/rbac/delete-role-user:
    post:
      consumes:
      - application/json
      parameters:
      - description: Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.RoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: delete role
      tags:
      - RBAC
  /v1/rbac/get-policy:
    get:
      consumes:
      - application/json
      description: this method for get policy
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: get policy
      tags:
      - RBAC
  /v1/rbac/remove-policy:
    post:
      consumes:
      - application/json
      parameters:
      - description: Policy
        in: body
        name: policy
        required: true
        schema:
          $ref: '#/definitions/models.Policy'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Remove Policy
      tags:
      - RBAC
  /v1/rbac/same-role/{role}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Role
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: get the same role users
      tags:
      - RBAC
  /v1/register:
    post:
      consumes:
      - application/json
      description: this api for registers new user
      parameters:
      - description: register user
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: register user api
      tags:
      - Sign-in | Sign-up
  /v1/users:
    get:
      consumes:
      - application/json
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: get all users
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: Update User
        in: body
        name: NewUser
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: update user
      tags:
      - User
  /v1/users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: get user by id
      tags:
      - User
  /v1/users/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create User
        in: body
        name: UserInfo
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: create user
      tags:
      - User
  /v1/users/get-profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: get own user profile
      tags:
      - User
  /v1/verify/{email}/{code}:
    get:
      consumes:
      - application/json
      description: this api verifies
      parameters:
      - description: email
        in: path
        name: email
        required: true
        type: string
      - description: code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: verify user api
      tags:
      - Sign-in | Sign-up
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
